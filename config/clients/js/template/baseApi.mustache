{{>partial_header}}

// Some imports not used depending on template conditions
import globalAxios, { AxiosStatic } from "axios";

import { Configuration, UserConfigurationParams } from "./configuration";
import { Credentials } from "./credentials";

/**
 *
 * @export
 * @interface RequestArgs
 */
export interface RequestArgs {
    url: string;
    options: any;
}

/**
 *
 * @export
 * @class BaseAPI
 */
export class BaseAPI {
  protected configuration: Configuration;
  protected credentials: Credentials;

  constructor(configuration: UserConfigurationParams | Configuration, protected axios?: AxiosStatic) {
    if (configuration instanceof Configuration) {
      this.configuration = configuration;
    } else {
      this.configuration = new Configuration(configuration, axios || globalAxios);
    }
    this.configuration.isValid();

    this.credentials = Credentials.init(this.configuration);
  }

  public get storeId() {
    return this.configuration.storeId;
  }

  public set storeId(storeId: string) {
    this.configuration.storeId = storeId;
  }
}
